#include <iostream>
#include <type_traits>
#include <vector>
#include <string>
#include <algorithm>
#include <bits/stdc++.h>

using namespace std;

class Node {
    public:
    int data;
    Node* next;
    Node* back;

    public:
    Node(int data1, Node* next1, Node* back1) {
        data = data1;
        next = next1;
        back = back1;
    }

    public:
    Node(int data1) {
        data = data1;
        next = nullptr;
        back = nullptr;
    }
};

Node* ConvertArr2DLL(vector<int> arr) {
    Node* head = new Node(arr[0]);
    Node* prev = head;

    for(int i=1;i<arr.size(); i++) {
        Node* temp = new Node(arr[i], nullptr, prev);
        prev->next = temp;
        prev = temp;
    }
    return head;
}

void print(Node* head) {
    while(head != NULL) {
        cout<<head->data<<" ";
        head = head->next;
    }
}

Node* InsertHead(Node* head, int val) {
    Node* temp = new Node(val);

    if(head == NULL) {
        return temp;
    }
    temp->next = head;
    head->back = temp;
    return temp;
}

Node* InsertTail(Node* head, int val) {
    Node* temp = new Node(val);

    if(head == NULL ) {
        return temp;
    }

    Node* mover = head;
    while(mover->next != NULL) {
        mover = mover->next;
    }
    mover->next = temp;
    temp->back = mover;
    return head;
}

Node* InsertAtKthposition(Node* head, int val, int k) {
    Node* temp = new Node(val);

    if(k == 1)  {
        temp->next = head;
        head->back = temp;
        return temp;
    }
    Node* mover = head;
    int count = 1;
    while(mover != NULL && count < k - 1) {
        mover = mover->next;
        count++;
    }
    temp->next = mover->next;
    temp->back = mover;
    mover->next = temp;

    return head;
}

Node* DeleteHead(Node* head) {
    if(head == NULL) return NULL;
    Node* temp = head;
    head = head->next;
    temp->next = NULL;
    head->back = NULL;
    return head;
}

Node* DeleteTail(Node* head) {
    if(head == NULL) return NULL;

    Node* temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }

        temp->back->next = nullptr;
        delete temp;
        return head;
    }

int LengthOfLL(Node* head) {
    Node* temp = head;
    int count = 0;

    while(temp != NULL) {
        count++;
        temp = temp->next;
    }
    return count;
}

int main() {
    vector<int> arr = {1,2,4,3,4,5};
    Node* head = ConvertArr2DLL(arr);
    head = InsertTail(head, 100);
    print(head);
}
